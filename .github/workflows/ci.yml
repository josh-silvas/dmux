---
# DMux CI testing workflow.
name: "Github Actions CI"

concurrency:  # Cancel any existing runs of this workflow for this same PR
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

# This GitHub action runs your tests for each pull request and push.
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - "main"
      - "develop"
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-rc[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+"
    paths-ignore:
      - "README.md"
      - "docs/*"
      - "Formula/*"
  pull_request:
    paths-ignore:
      - "README.md"
      - "docs/*"
      - "Formula/*"

# Testing only needs permissions to read the repository contents, however release needs write permissions.
permissions:
  contents: "write"

jobs:

#  golangci-lint:
#    name: "GolangCI-Lint"
#    runs-on: "ubuntu-latest"
#    timeout-minutes: 5
#    steps:
#      - name: "Git Checkout"
#        uses: "actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9"  # v3.5.3
#      - name: "Setup Go Environment"
#        uses: "actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe"  # v4.1.0
#        with:
#          go-version-file: "go.mod"
#          cache: true
#      - name: "Run GolangCI Linting Process"
#        uses: "golangci/golangci-lint-action@v3"
#        with:
#          version: "v1.55"
#          args: "--out-format=colored-line-number --tests=false --exclude-use-default=false"
#
#  yamllint:
#    name: "YAML Lint"
#    runs-on: "ubuntu-latest"
#    steps:
#      - name: "Git Checkout"
#        uses: "actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9"  # v3.5.3
#      - name: "Run YAML Linting Process"
#        uses: "karancode/yamllint-github-action@master"
#        with:
#          yamllint_strict: false
#          yamllint_comment: true
#
#  test:
#    name: "Unit Tests"
#    needs:
#      - "golangci-lint"
#      - "yamllint"
#    runs-on: "ubuntu-latest"
#    timeout-minutes: 15
#    strategy:
#      fail-fast: false
#    steps:
#      - uses: "actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9"  # v3.5.3
#      - uses: "actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe"  # v4.1.0
#        with:
#          go-version-file: "go.mod"
#          cache: true
#      - name: "Run Unit Tests"
#        run: "make _unittest"
#        timeout-minutes: 10

  goreleaser:
    if: "github.ref_type == 'tag'"
    name: "Release"
    runs-on: "macos-latest"
#    needs:
#      - "golangci-lint"
#      - "yamllint"
#      - "test"
    steps:
      - name: "Git Checkout"
        uses: "actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9"  # v3.5.3
      - name: "Setup Go Environment"
        uses: "actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe"  # v4.1.0
        with:
          go-version-file: "go.mod"
          cache: true
      - name: "Install Dependencies"
        run: "sudo apt-get install gcc-multilib g++-multilib"
      - name: "Run GoReleaser Release"
        uses: "goreleaser/goreleaser-action@3fa32b8bb5620a2c1afe798654bbad59f9da4906"  # v4.4.0
        with:
          # One of 'goreleaser' (default) or 'goreleaser-pro'
          distribution: "goreleaser"
          version: "1.23.0"
          args: "release --snapshot --clean"
        env:
          GITHUB_TOKEN: "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"
