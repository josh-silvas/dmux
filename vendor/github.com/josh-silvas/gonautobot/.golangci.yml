---
run:
    concurrency: 4
    timeout: "5m"
    issues-exit-code: 1
    tests: true
    allow-parallel-runners: false


# output configuration options
output:
    formats:
        - format: "colored-line-number"
    print-issued-lines: true
    print-linter-name: true
    uniq-by-line: true


# all available settings of specific linters
linters-settings:
    dogsled:
        # checks assignments with too many blank identifiers; default is 2
        max-blank-identifiers: 2
    dupl:
        # tokens count to trigger issue, 150 by default
        threshold: 200
    errcheck:
        # report about not checking of errors in type assertions: `a := b.(MyStruct)`;
        # default is false: such cases aren't reported by default.
        check-type-assertions: false

        # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
        # default is false: such cases aren't reported by default.
        check-blank: true

    funlen:
        lines: 60
        statements: 40
    gocognit:
        # minimal code complexity to report, 30 by default (but we recommend 10-20)
        min-complexity: 10
    nestif:
        # minimal complexity of if statements to report, 5 by default
        min-complexity: 4
    goconst:
        # minimal length of string constant, 3 by default
        min-len: 3
        # minimal occurrences count to trigger, 3 by default
        min-occurrences: 3
    gocritic:
        enabled-tags:
            - "performance"
        disabled-tags:
            - "experimental"

        settings:
            captLocal:  # must be valid enabled check name
                paramsOnly: true
            rangeValCopy:
                sizeThreshold: 32
    gocyclo:
        # minimal code complexity to report, 30 by default (but we recommend 10-20)
        min-complexity: 10
    godot:
        # check all top-level comments, not only declarations
        check-all: false
    godox:
        keywords:
            - "NOTE"
            - "OPTIMIZE"  # marks code that should be optimized before merging
            - "HACK"  # marks hack-arounds that should be removed before merging
    gofmt:
        # simplify code: gofmt with `-s` option, true by default
        simplify: true

    gosec:
        excludes:
            - "G101"  # potential hardcoded credentials (invalid)
            - "G602"  # potential slice out of bounds (not accounting for surrounding logic)
    govet:
        # settings per analyzer
        settings:
            printf:  # analyzer name, run `go tool vet help` to see all analyzers
                funcs:  # run `go tool vet help printf` to see available settings for `printf` analyzer
                    - "(github.com/golangci/golangci-lint/pkg/logutils.Log).Infof"
                    - "(github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf"
                    - "(github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf"
                    - "(github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf"

        # enable or disable analyzers by name
        enable:
            - "atomicalign"
        enable-all: false
        disable:
            - "shadow"
        disable-all: false
    depguard:
        rules:
            main:
                deny:
                    - pkg: "github.com/sirupsen/logrus"
                      desc: "logging is allowed only by logutils.Log"
    lll:
        # max line length, lines longer will be reported. Default is 120.
        # '\t' is counted as 1 character by default, and can be changed with the tab-width option
        line-length: 120
        # tab width in spaces. Default to 1.
        tab-width: 1
    misspell:
        # Correct spellings using locale preferences for US or UK.
        # Default is to use a neutral variety of English.
        # Setting locale to US will correct the British spelling of 'colour' to 'color'.
        locale: "US"
    nakedret:
        # make an issue if func has more lines of code than this setting and it has naked returns; default is 30
        max-func-lines: 30
    nolintlint:
        # Enable to ensure that nolint directives are all used. Default is true.
        allow-unused: false
        # Exclude following linters from requiring an explanation.  Default is [].
        allow-no-explanation: []
        # Enable to require an explanation of nonzero length after each nolint directive. Default is false.
        require-explanation: true
        # Enable to require nolint directives to mention the specific linter being suppressed. Default is false.
        require-specific: true
    unparam:
        # Inspect exported functions, default is false. Set to true if no external program/library imports your code.
        # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
        # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
        # with golangci-lint call it on a directory with the changed file.
        check-exported: false
    whitespace:
        multi-if: false  # Enforces newlines (or comments) after every multi-line if statement
        multi-func: false  # Enforces newlines (or comments) after every multi-line function signature


issues:
    # List of regexps of issue texts to exclude, empty list by default.
    # But independently of this option we use default exclude patterns,
    # it can be disabled by `exclude-use-default: false`. To list all
    # excluded by default patterns execute `golangci-lint run --help`
    exclude-use-default: false
    # Maximum count of issues with the same text.
    # Set to 0 to disable. Default: 3
    max-same-issues: 0
    exclude:
        - ".*Close|.*Flush|.*printf?|should have a package comment"
    exclude-dirs:
        - "Formula"
        - "build"
        - ".idea"
        - "vendor"
    exclude-dirs-use-default: true
    exclude-files:
        - ".*\\.my\\.go$"
    exclude-rules:
        - linters:
              - "staticcheck"
          text: "SA5008:"

linters:
    enable:
        - "gosimple"
        - "staticcheck"
        - "unused"
        - "govet"
        # The linter 'golint' is deprecated (since v1.41.0) due to:
        # The repository of the linter has been archived by the owner.  Replaced by revive.
        - "revive"
    disable:
        - "prealloc"
    disable-all: false
    presets:
        - "bugs"
        - "unused"
    fast: false
